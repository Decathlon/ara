{
  "collection": {
    "_": {
      "postman_id": "4d96d97d-9f7b-457b-9cff-0577898108b6"
    },
    "item": [
      {
        "id": "00bf615f-0605-4ec5-b379-f12188d90892",
        "name": "fr+us",
        "item": [
          {
            "id": "8846cd45-360b-4f84-93cc-481cd5f260c4",
            "name": "@severity-sanity-check Functionalities {{F-Buy-Pay}} & {{F-Buy-Card}}: Pay by Card",
            "request": {
              "url": {
                "path": [
                  "post"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "paymentMethod",
                    "value": "card",
                    "type": "text"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "19ec486e-21e3-4c0e-9620-458a873c953e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Response should validate the payment method is indeed By card\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.form.paymentMethod).to.eql(\"card\");",
                    "});",
                    "",
                    "pm.test(\"Response should indicate a succeed transaction status\", function () {",
                    "    if (pm.environment.get(\"failing\") === 'true') {",
                    "        var jsonData = pm.response.json();",
                    "        pm.expect(jsonData.transactionStatus || \"failed\").to.eql(\"succeed\");",
                    "    }",
                    "});",
                    ""
                  ]
                }
              }
            ]
          },
          {
            "id": "bb0eac46-d841-4c9d-8467-f73e1f9afdd9",
            "name": "@severity-medium Functionalities {{F-Buy-Pay}} & {{F-Buy-Gift}}: Pay by Gift Card",
            "request": {
              "url": {
                "path": [
                  "post"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "paymentMethod",
                    "value": "gift-card",
                    "type": "text"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "33040c82-407e-4668-bb64-e44b2cf86f57",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Response should validate the payment method is indeed By gift card\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.form.paymentMethod).to.eql(\"gift-card\");",
                    "});",
                    "",
                    "pm.test(\"Response should indicate a succeed transaction status\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.transactionStatus || \"succeed\").to.eql(\"succeed\");",
                    "});",
                    ""
                  ]
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30f678d8-fd65-4962-94bd-205893e0ed7b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "819cce6a-8de1-419f-94de-ed067911b6c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "43639407-bc30-49a0-a728-a5f150d4a6f8",
        "name": "us",
        "item": [
          {
            "id": "bbf0dd86-fe41-44f3-add1-fdc15a12e0de",
            "name": "@severity-medium Functionalities {{F-Buy-Pay}} & {{F-Buy-NFC}}: Pay by Mobile NFC",
            "request": {
              "url": {
                "path": [
                  "post"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "paymentMethod",
                    "value": "nfc",
                    "type": "text"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4cb14ec6-4c35-4042-9af6-4075dae8027d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Response should validate the payment method is indeed By NFC\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.form.paymentMethod).to.eql(\"nfc\");",
                    "});",
                    "",
                    "pm.test(\"Response should indicate a succeed transaction status\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.transactionStatus || \"succeed\").to.eql(\"succeed\");",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "87c34d31-4f9f-4bfe-b1ee-d9aec1991c61"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33dc864f-2aab-4eed-801c-270ec200ce32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6cd7a29-154c-4c31-9227-077612c4aa2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad238776-f6d5-4b44-b017-19af84234a8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bd36287-c8c3-4b8e-8a1f-70e120f1679c"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "4d96d97d-9f7b-457b-9cff-0577898108b6",
      "name": "Our Lovely Store - Pay",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "3a067ce3-dad7-44ea-a2f1-d2d6a546eb2d",
    "name": "integ",
    "values": [
      {
        "type": "any",
        "value": "https://postman-echo.com",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "false",
        "key": "failing"
      }
    ]
  },
  "globals": {
    "id": "96166d92-2df5-4c21-ba39-6b7057d189de",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 706,
      "started": 1548064832098,
      "completed": 1548064832912
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 1,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b6899e2b-e0b7-4c2e-b96f-02500b43d301",
          "httpRequestId": "2cc69a69-7212-4ea6-bb71-66be0cf75d4f"
        },
        "item": {
          "id": "bbf0dd86-fe41-44f3-add1-fdc15a12e0de",
          "name": "@severity-medium Functionalities {{F-Buy-Pay}} & {{F-Buy-NFC}}: Pay by Mobile NFC",
          "request": {
            "url": {
              "path": [
                "post"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "paymentMethod",
                  "value": "nfc",
                  "type": "text"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4cb14ec6-4c35-4042-9af6-4075dae8027d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response should validate the payment method is indeed By NFC\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.form.paymentMethod).to.eql(\"nfc\");",
                  "});",
                  "",
                  "pm.test(\"Response should indicate a succeed transaction status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.transactionStatus || \"succeed\").to.eql(\"succeed\");",
                  "});",
                  ""
                ],
                "_lastExecutionId": "87c34d31-4f9f-4bfe-b1ee-d9aec1991c61"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.6.0"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-type",
              "value": "multipart/form-data; boundary=--------------------------244203429739472194604081"
            },
            {
              "key": "content-length",
              "value": 171
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "paymentMethod",
                "value": "nfc",
                "type": "text"
              }
            ]
          }
        },
        "response": {
          "id": "d4cd8290-c05a-4de3-8012-f115b4e43d3d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Mon, 21 Jan 2019 10:00:34 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"19a-Xrcdc7ERowMZ4DPfqU9RYJS4wJc\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AnAF_4tLPo2W6Gd8Il8nZjxh8W_aKD6s7.UXWnleiJ14%2BkbuibsrIYgG8qUs%2F7SXquOVOArLrc3%2B4; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "272"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              110,
              102,
              99,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              55,
              49,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              117,
              108,
              116,
              105,
              112,
              97,
              114,
              116,
              47,
              102,
              111,
              114,
              109,
              45,
              100,
              97,
              116,
              97,
              59,
              32,
              98,
              111,
              117,
              110,
              100,
              97,
              114,
              121,
              61,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              50,
              52,
              52,
              50,
              48,
              51,
              52,
              50,
              57,
              55,
              51,
              57,
              52,
              55,
              50,
              49,
              57,
              52,
              54,
              48,
              52,
              48,
              56,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              54,
              46,
              48,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 706,
          "responseSize": 410
        },
        "id": "bbf0dd86-fe41-44f3-add1-fdc15a12e0de",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response should validate the payment method is indeed By NFC",
            "skipped": false
          },
          {
            "assertion": "Response should indicate a succeed transaction status",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 272
    },
    "failures": [],
    "error": null
  }
}