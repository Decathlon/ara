{{- $name := printf "%s-%s-%s" .Release.Name .Chart.Name "api" -}}
{{- $defaultImage := printf "%s:%s" "decathlon/ara-api" .Chart.Version -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ include "ara.name" . }}
    helm.sh/chart: {{ include "ara.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: {{ $name }}
  {{- if .Values.api.annotations }}
  annotations:
{{ toYaml .Values.api.annotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ara.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: {{ $name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ara.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ $name }}
    spec:
      containers:
      - name: {{ $name }}
        image: "{{ .Values.api.image.registry }}/{{ .Values.api.image.repository }}:{{ default .Chart.Version .Values.api.image.tag }}"
        imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
        env:
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: api_port
        - name: MANAGEMENT_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: api_management_port
        - name: ARA_DATABASE_TARGET
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: database_type
        - name: ARA_DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "ara.database.secret.name" . }}
              key: {{ .Values.database.secretConfig.hostKey }}
        - name: ARA_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name:  {{ include "ara.database.secret.name" . }}
              key: {{ .Values.database.secretConfig.databaseNameKey }}
        - name: ARA_DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name:  {{ include "ara.database.secret.name" . }}
              key: {{ .Values.database.secretConfig.usernameKey }}
        - name: ARA_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ara.database.secret.name" .}}
              key: {{ .Values.database.secretConfig.passwordKey }}
        - name: ARA_CLIENTBASEURL
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: app_url
        - name: ARA_DATABASE_LIQUIBASE_ENABLED
          valueFrom:
            configMapKeyRef:
                name: {{ include "ara.configmap.name" . }}
                key: liquibase_active
        - name: ARA_LOGGING_MODE
          valueFrom:
            configMapKeyRef:
                name: {{ include "ara.configmap.name" . }}
                key: logging_mode
        - name: SPRING_CONFIG_IMPORT
          value: optional:file:/app/config/config-custom.yaml,optional:file:/app/config/config-authentication.yaml
        - name: INFO_APP_VERSION
          value: "{{ .Chart.Version }}"
        volumeMounts:
          - name: config
            mountPath: "/app/config"
            readOnly: true
        ports:
        - containerPort: {{ .Values.api.port }}
          name: http-port
        - containerPort: {{ .Values.api.management.port }}
          name: management-port
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: {{ .Values.api.management.port }}
          initialDelaySeconds: 40
          timeoutSeconds: 2
          periodSeconds: 3
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: {{ .Values.api.management.port }}
          initialDelaySeconds: 100
          timeoutSeconds: 2
          periodSeconds: 8
          failureThreshold: 1
        {{- if .Values.api.resources }}
        resources:
{{ toYaml .Values.api.resources | indent 10 }}
        {{- end }}
      {{- if .Values.api.sideCarContainer }}
{{ toYaml .Values.api.sideCarContainer | indent 6 }}
      {{- end}}
      volumes:
      - name: config
        secret:
          secretName: {{ include "ara.api.secret.name" . }}
          items:
            - key: {{ .Values.api.configSecret.customConfigKey }}
              path: "config-custom.yaml"
      {{- if .Values.api.volumes }}
{{ toYaml .Values.api.volumes | indent 6 }}
      {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.api.port }}
    targetPort: http-port
  - name: management
    port: {{ .Values.api.management.port }}
    targetPort: management-port
  selector:
    app.kubernetes.io/name: {{ include "ara.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ $name }}
