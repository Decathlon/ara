{{- $name := printf "%s-%s-%s" .Release.Name .Chart.Name "gw" -}}
{{- $defaultImage := printf "%s:%s" "decathlon/ara-gw" .Chart.Version -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ include "ara.name" . }}
    helm.sh/chart: {{ include "ara.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: {{ $name }}
  {{- if .Values.gw.annotations }}
  annotations:
{{ toYaml .Values.gw.annotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.gw.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ara.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: {{ $name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ara.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ $name }}
    spec:
      containers:
      - name: {{ $name }}
        image: "{{ .Values.gw.image.registry }}/{{ .Values.gw.image.repository }}:{{ default .Chart.Version .Values.gw.image.tag }}"
        imagePullPolicy: {{ .Values.gw.image.imagePullPolicy }}
        env:
        - name: ARA_UI_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: ui_host
        - name: ARA_UI_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: ui_port
        - name: ARA_API_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: api_host
        - name: ARA_API_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: api_port
        - name: ARA_API_MANAGEMENTPORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ara.configmap.name" . }}
              key: api_management_port
        volumeMounts:
          - name: config
            mountPath: "/app/config"
            readOnly: true
        ports:
        - containerPort: {{ .Values.gw.port }}
          name: http-port
        readinessProbe:
          httpGet:
            path: /actuatorgw/health/readiness
            port: {{ .Values.gw.management.port }}
          initialDelaySeconds: 40
          timeoutSeconds: 2
          periodSeconds: 3
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /actuatorgw/health/liveness
            port: {{ .Values.gw.management.port }}
          initialDelaySeconds: 100
          timeoutSeconds: 2
          periodSeconds: 8
          failureThreshold: 1
        {{- if .Values.gw.resources }}
        resources:
{{ toYaml .Values.gw.resources | indent 10 }}
        {{- end }}
      volumes:
      - name: config
        secret:
          secretName: {{ include "ara.app.secret.name" . }}
          items:
            - key: {{ .Values.gw.configSecret.customConfigKey }}
              path: "config-custom.yaml"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
spec:
  {{- if .Values.loadBalancer.enabled }}
  type: LoadBalancer
  {{- if .Values.loadBalancer.loadBalancerIP }}
  loadBalancerIP: {{ .Values.loadBalancer.loadBalancerIP }}
  {{- end }}
  {{- end }}
  ports:
  - name: http
    port: {{ .Values.gw.port }}
    targetPort: http-port
  selector:
    app.kubernetes.io/name: {{ include "ara.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ $name }}
