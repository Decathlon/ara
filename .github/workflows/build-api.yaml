name: build api

on:
  push:
    branches:
      - 'main'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        *  * * * *
    - cron: '30 1 * * 0'

jobs:
  code_app_change:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          github_token: ${{ github.token }}
          paths: '["code/api/**", ".github/workflows/build-api.yaml"]'
          cancel_others: 'true'
          do_not_skip: '["push", "workflow_dispatch", "schedule"]'
  build-api:
    needs: code_app_change
    if: ${{ needs.code_app_change.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      -
        name: Set up JDK
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'
      - 
        name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: java
          config-file: ./.github/codeql/codeql-api-config.yml
      - 
        name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Ensure package json for semantic-release-monorepo
        working-directory: ./code/api
        run: test -e package.json || echo '{}' > package.json

      - name: Semantic Release
        uses: Thomgrus/semantic-release-action@feat/add-working-dir
        with:
          working_directory: ./code/api
          semantic_version: 18
          dry_run: false
          extra_plugins: |
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/exec@6.0.2
            @semantic-release/git@10.0.1
            @semantic-release/github@8.0.2
          extends: |
            semantic-release-monorepo
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      -
        name: Add host binding
        run: sudo echo "127.0.0.1 oauth2.dev.localhost" >> sudo tee -a /etc/hosts
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: start oauth2-dev-server
        run: docker-compose -f code/docker-compose.dev.yaml up -d oauth2-dev-server
      -
        name: check oauth2-dev-server is running
        run: docker run --rm --network host aligor/wait-for-url --url http://oauth2.dev.localhost:9001/actuator/health
      - 
        name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -f code/api -B clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      -
        name: stop oauth2-dev-server
        run: docker-compose -f code/docker-compose.dev.yaml down
      - 
        name: Install xmllint
        run: sudo apt-get install libxml2-utils
      -
        name: Prepare
        id: prep
        run: |
          PUSH=FALSE
          pushd code
          APP_EXISTS=$(make -s check-api-image)
          popd
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$BRANCH_NAME" ] && [ "$APP_EXISTS" != 'true' ]; then
              PUSH=TRUE
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            BRANCH_NAME=$(echo ${{ github.event.pull_request.head.ref }} | sed -r 's#/+#-#g')
            if [[ $BRANCH_NAME == release-* ]]; then
              PUSH=TRUE
              SUFFIX=-rc
            else
              SUFFIX=-pr.${{ github.event.number }}
            fi
          fi
          echo ::set-output name=push::${PUSH}
          echo ::set-output name=suffix::${SUFFIX}
      -
        name: Login to DockerHub
        if: ${{ steps.prep.outputs.push == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        run: |
          pushd code
          make build-api SUFFIX=${{ steps.prep.outputs.suffix }} PUBLISH=${{ steps.prep.outputs.push }}
          popd
      - 
        name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        with:
          category: "ara_api"
      - 
        name: Integration tests
        run: |
          pushd code/tests
          make start-local
          make test-karate BATCH=true
          make destroy-local
          popd
          cat code/tests/target/results.txt | grep SUCCESS
