name: build api

on:
  push:
    branches:
      - 'main'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        *  * * * *
    - cron: '30 1 * * 0'

jobs:
  code_api_change:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          github_token: ${{ github.token }}
          paths: '["code/api/**"]'
          cancel_others: 'true'
          do_not_skip: '["push", "workflow_dispatch", "schedule"]'
  build-api:
    needs:
      - code_api_change
    if: ${{ needs.code_api_change.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      -
        name: Set up JDK
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'adopt'
          java-version: '16'
      - 
        name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          lanquages: java
          config-file: ./.github/codeql/codeql-api-config.yml
      - 
        name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - 
        name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - 
        name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -f code/api -B clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      - 
        name: Install xmllint
        run: sudo apt-get install libxml2-utils
      - 
        id: skip_check
        run: |
          if [[ $GITHUB_REF == refs/pull/* ]]; then
            API_EXISTS=false
          else
            pushd code
            API_EXISTS=$(make -s check-api-image)
            popd
          fi
          echo ::set-output name=docker_skip::${API_EXISTS}
      -
        name: Prepare
        id: prep
        if: ${{ steps.skip_check.outputs.docker_skip != 'true' }}
        run: |
          PUSH=FALSE
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$BRANCH_NAME" ]; then
              PUSH=TRUE
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            BRANCH_NAME=$(echo ${{ github.event.pull_request.head.ref }} | sed -r 's#/+#-#g')
            if [[ $BRANCH_NAME == release-* ]]; then
              PUSH=TRUE
              SUFFIX=rc
            else
              SUFFIX=pr-${{ github.event.number }}
            fi
          fi
          echo ::set-output name=push::${PUSH}
          echo ::set-output name=suffix::${SUFFIX}
      -
        name: Set up QEMU
        if: ${{ steps.skip_check.outputs.docker_skip != 'true' }}
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: ${{ steps.skip_check.outputs.docker_skip != 'true' }}
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: ${{ steps.skip_check.outputs.docker_skip != 'true' && steps.prep.outputs.push == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        if: ${{ steps.skip_check.outputs.docker_skip != 'true' }}
        run: |
          pushd code
          make build-api SUFFIX=${{ steps.prep.outputs.suffix }} PUBLISH=${{ steps.prep.outputs.push }}
          popd
      - 
        name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        with:
          category: "ara_api"
