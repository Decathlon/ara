name: Push RC api

on:
  pull_request_target:
    branches:
      - release/*.*.*

jobs:
  release-candidate-api:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prep
        run: |
          RELEASE_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          RELEASE=${RELEASE_BRANCH#release-}
          VERSION=$(cat charts/stable/Chart.yaml | grep version | sed -e 's/version: //')
          TAG="decathlon/ara-api:${RELEASE}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=release::${RELEASE}
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Check release version
        if: steps.prep.outputs.version != steps.prep.outputs.release
        run: exit 1
      -
        name: Set up QEMU
        if: steps.prep.outputs.version == steps.prep.outputs.release
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: steps.prep.outputs.version == steps.prep.outputs.release
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: steps.prep.outputs.version == steps.prep.outputs.release
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        if: steps.prep.outputs.version == steps.prep.outputs.release
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./code/api
          file: ./code/api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tag }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.release }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}