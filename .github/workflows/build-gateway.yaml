name: build gateway

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - main

jobs:
  code_gw_change:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          github_token: ${{ github.token }}
          paths: '["code/gateway/**"]'
          cancel_others: 'true'
          do_not_skip: '["push", "workflow_dispatch"]'
  docker_image:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install xmllint
        run: sudo apt-get install libxml2-utils
      - id: skip_check
        run: |
          if [[ $GITHUB_REF == refs/pull/* ]]; then
            GW_EXISTS=false
          else
            pushd code
            GW_EXISTS=$(make -s check-gw-image)
            popd
          fi
          echo ::set-output name=should_skip::${GW_EXISTS}
  build-gw:
    needs:
      - code_gw_change
      - docker_image
    if: ${{ needs.code_gw_change.outputs.should_skip != 'true' && needs.docker_image.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Install xmllint
        run: sudo apt-get install libxml2-utils
      -
        name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '16'
      - 
        name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - 
        name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - 
        name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -f code/gateway -B clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      -
        name: Prepare
        id: prep
        run: |
          PUSH=FALSE
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$BRANCH_NAME" ]; then
              PUSH=TRUE
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            BRANCH_NAME=$(echo ${{ github.event.pull_request.head.ref }} | sed -r 's#/+#-#g')
            if [[ $BRANCH_NAME == release-* ]]; then
              PUSH=TRUE
              SUFFIX=rc
            else
              SUFFIX=pr-${{ github.event.number }}
            fi
          fi
          echo ::set-output name=push::${PUSH}
          echo ::set-output name=suffix::${SUFFIX}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: ${{ steps.prep.outputs.push == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        run: |
          cd code
          make build-gw SUFFIX=${{ steps.prep.outputs.suffix }} PUBLISH=${{ steps.prep.outputs.push }}

