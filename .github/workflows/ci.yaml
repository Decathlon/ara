name: Lint and Test Charts

on:
  pull_request:
    branches:
      - main

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: ${{ github.token }}
          paths: '["charts/**"]'
  pre_job_dev:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: ${{ github.token }}
          paths: '["charts/dev/**"]'
  lint-chart:
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --target-branch main
  lint-docs:
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    needs: lint-chart
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run helm-docs
        run: .github/helm-docs.sh
  kubeval-chart:
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    needs:
      - lint-chart
      - lint-docs
    strategy:
      matrix:
        k8s:
          - v1.17.16
          - v1.18.14
          - v1.19.6
          - v1.20.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Helm template
        run: |
          mkdir helm-templates-dev helm-templates-stable
          helm template charts/dev --output-dir helm-templates-dev
          helm template charts/stable --output-dir helm-templates-stable
      - name: validate manifests
        uses: makocchi-git/actions-k8s-manifests-validate-kubeval@v1.0.1
        with:
          files: helm-templates-dev,helm-templates-stable
          openshift: true
          comment: true
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ matrix.k8s }}
  rc-chart:
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job_dev.outputs.should_skip != 'true' }}
    needs:
      - kubeval-chart
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare dev chart
        run: ./.github/helm-chart-dev.sh
      - name: Commit dev chart
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          VERSION=$(cat charts/dev/Chart.yaml | grep version | sed -e 's/version: //')
          git commit -am "chore: auto-commit chart ${VERSION}"
          git push origin HEAD:${PR_BRANCH_NAME}
        env:
          PR_BRANCH_NAME: '${{github.event.pull_request.head.ref}}'
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.0.0
        env:
          CR_TOKEN: '${{ secrets.CR_TOKEN }}'

